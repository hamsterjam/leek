# Registers are assigned as:
#   r1 = pointer1
#   r2 = pointer2
#   r3 = data1
#   r4 = data2
#   r5 = finished flag

start:
    REL     data    r1
    MOV     r0      r5

itteration:
    ADDi    r1  1   r2
    LOAD    r1      r3
    LOAD    r2      r4
    ADD     r4  r0  r0
    FPRED   fZERO
    JMP     last

    SUB     r4  r3  r0
    FPRED   fNEG
    JMP     swap
    JMP     next

swap:
    STORE   r4      r1
    STORE   r3      r2
    ADDi    r0  1   r5

next:
    MOV     r2      r1
    JMP     itteration

last:
    ADD     r5  r0  r0
    FPRED   fZERO
    JMP     print
    JMP     start

print:
    FCLR    fICF
    REL     data        r1
    REL     printAddr   r3
    LOAD    r3          r3

    printlp:
        LOAD    r1      r2
        ADD     r2  r0  r0
        FPRED   fZERO
        HALT
        STORE   r2      r3
        WFI
        ADDi    r1  1   r1
        JMP     printlp

data:
    LIT 5
    LIT 6
    LIT 4
    LIT 7
    LIT 3
    LIT 8
    LIT 2
    LIT 9
    LIT 1
    LIT 10
    LIT 0

printAddr:
    LIT 0xC100
